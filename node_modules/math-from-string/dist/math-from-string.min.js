/*github.com/Grafluxe/math-from-string*/
"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},expectedStr=/^[\d-(.][\d+\-%*/().]+[\d)]$/,unexpectedOps=/(?!\*\*)[+\-%*/][+/*]\d|[+\-*/]{3,}/,parans=/\(([^(]+?)\)/,hasMulDiv=/[/%*]/,mulDiv=/(-?[\d.]+)([/%*]*?)(-?[\d.]+)/,hasAddSub=/(?!^-)-|\+/,addSub=/(-?[\d.]+)([+-])(-?[\d.]+)/;function mathFromString(e){if(!expectedStr.test(e))throw new Error('The string at/near "'+e+'" is malformed.');if(unexpectedOps.test(e))throw new Error('The string at/near "'+e+'" has a malformed operator.');for(;-1<e.indexOf("(");){var r=e.match(parans);e=e.replace(r[0],mathFromString(r[1]))}for(;hasMulDiv.test(e);)e=e.replace(mulDiv,_doMath);for(;hasAddSub.test(e);)e=e.replace(addSub,_doMath);return Number(e)}function _doMath(e,r,t,o){if(isNaN(r))throw new Error('The value "'+r+'" is not a valid number.');if(isNaN(o))throw new Error('The value "'+o+'" is not a valid number.');switch(t){case"/":return Number(r)/Number(o);case"*":return Number(r)*Number(o);case"+":return Number(r)+Number(o);case"-":return Number(r)-Number(o);case"**":return Math.pow(r,o);case"%":return Number(r)%Number(o)}}"object"===("undefined"==typeof module?"undefined":_typeof(module))&&module.exports&&(module.exports=mathFromString);